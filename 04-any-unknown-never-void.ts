/**
 * TYPESCRIPT C∆† B·∫¢N - PH·∫¶N 2.4: ANY, UNKNOWN, NEVER, VOID
 * ======================================================
 * 
 * üéØ KH√ÅI NI·ªÜM
 * -----------
 * - Any: Cho ph√©p m·ªçi ki·ªÉu d·ªØ li·ªáu, kh√¥ng ki·ªÉm tra type.
 * - Unknown: Gi·ªëng any nh∆∞ng an to√†n, c·∫ßn ki·ªÉm tra ki·ªÉu.
 * - Never: Kh√¥ng bao gi·ªù x·∫£y ra, d√πng cho h√†m kh√¥ng k·∫øt th√∫c.
 * - Void: Kh√¥ng c√≥ gi√° tr·ªã tr·∫£ v·ªÅ, d√πng cho h√†m kh√¥ng tr·∫£ v·ªÅ g√¨.
 * 
 * üí° L·ª¢I √çCH
 * ---------
 * - Any: Linh ho·∫°t, d·ªÖ t√≠ch h·ª£p.
 * - Unknown: An to√†n h∆°n any.
 * - Never: H·ªó tr·ª£ exhaustive checks.
 * - Void: R√µ r√†ng khi kh√¥ng c·∫ßn tr·∫£ v·ªÅ gi√° tr·ªã.
 */

/**
 * 1. ANY
 * ------
 * - Kh√¥ng ki·ªÉm tra type
 * - T√≠ch h·ª£p d·ªÖ d√†ng v·ªõi JavaScript c≈©
 * - S·ª≠ d·ª•ng c·∫©n th·∫≠n tr√°nh m·∫•t an to√†n
 */

/**
 * 2. UNKNOWN
 * -----------
 * - An to√†n h∆°n any
 * - C·∫ßn ki·ªÉm tra type tr∆∞·ªõc khi s·ª≠ d·ª•ng
 * - H·∫°n ch·∫ø l·ªói runtime
 */

/**
 * 3. NEVER
 * --------
 * - D√πng cho h√†m kh√¥ng bao gi·ªù k·∫øt th√∫c
 * - V√≠ d·ª•: infinite loops, exceptions
 */

/**
 * 4. VOID
 * -------
 * - Kh√¥ng c√≥ gi√° tr·ªã tr·∫£ v·ªÅ
 * - D√πng cho h√†m kh√¥ng c·∫ßn tr·∫£ v·ªÅ g√¨
 */

/**
 * ‚ö†Ô∏è L∆ØU √ù QUAN TR·ªåNG
 * ------------------
 * 1. Tr√°nh l·∫°m d·ª•ng any - m·∫•t type safety
 * 2. Unknown c·∫ßn ki·ªÉm tra type
 * 3. Never th∆∞·ªùng do compiler suy lu·∫≠n
 * 4. Void kh√¥ng th·ªÉ g√°n gi√° tr·ªã h·ªØu √≠ch
 */

/**
 * üèãÔ∏è B√ÄI T·∫¨P TH·ª∞C H√ÄNH
 * ===================
 * 
 * B√ÄI 1: Flexible Data Processor
 * -------------------------------
 * Vi·∫øt h√†m processData(input: any): void
 * - In ra console data ƒë√£ x·ª≠ l√Ω
 * - G·ªçi toString() khi l√† object
 * - G·ªçi toFixed(2) khi l√† number
 * - G·ªçi toUpperCase() khi l√† string
 */

// TODO: Vi·∫øt code c·ªßa b·∫°n ·ªü ƒë√¢y cho B√†i 1
function processData(input: any): void {
    if (typeof input === 'object') console.log(input.toString())
    else if (typeof input === 'number') console.log(input.toFixed(2))
        else if (typeof input === 'string') console.log(input.toUpperCase())
}

/**
 * B√ÄI 2: Type-Safe Data Validator
 * -------------------------------
 * Vi·∫øt h√†m validateData(input: unknown): boolean
 * - Return true n·∫øu input l√† string c√≥ √≠t nh·∫•t 3 k√Ω t·ª± ho·∫∑c s·ªë d∆∞∆°ng
 * - Ng∆∞·ª£c l·∫°i return false
 */

// TODO: Vi·∫øt code c·ªßa b·∫°n ·ªü ƒë√¢y cho B√†i 2

function validateData(input: unknown): boolean {
    if (typeof input === 'string') return input.length >=3
    if (typeof input === 'number') return input > 0
    return false;
}


/**
 * B√ÄI 3: Never-Ending Story
 * -------------------------
 * Vi·∫øt h√†m runForever(): never
 * - M√¥ ph·ªèng m·ªôt c√¥ng vi·ªác kh√¥ng bao gi·ªù k·∫øt th√∫c
 */

// TODO: Vi·∫øt code c·ªßa b·∫°n ·ªü ƒë√¢y cho B√†i 3
function runForever(): never {
    while(true) console.log("This will never end");
}
typeof runForever();